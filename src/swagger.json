{
  "openapi": "3.0.0",
  "info": {
    "title": "SOLID API Challenge Documentation",
    "description": "Documentation of SOLID Challenge",
    "termsOfService": "http://localhost:3333/terms",
    "contact": {
      "email": "mauricio.caminha@hotmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3333",
      "description": "Dev API"
    },
    {
      "url": "https://www.deploy.com",
      "description": "Production API"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a User",
        "description": "Create a new User",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userBodyRequest"
              },
              "examples": {
                "userBodyRequest": {
                  "value": {
                    "name": "Maurício",
                    "email": "mauricio.caminha@hotmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userBodyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userErrorResponse"
                },
                "examples": {
                  "userErrorResponse": {
                    "value": {
                      "error": "This user already Exists."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Shows all users profiles",
        "description": "Shows all users profiles if you are a Admin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "user_id",
            "description": "User id",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listUsersBodyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userErrorResponse"
                },
                "examples": {
                  "userErrorResponse": {
                    "value": {
                      "error": "Forbbiden."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Shows user profile",
        "description": "Shows user profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "user_id",
            "description": "User id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userBodyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userErrorResponse"
                },
                "examples": {
                  "userErrorResponse": {
                    "value": {
                      "error": "User not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update the admin attribute of user",
        "description": "The admin attribute turns true",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "name": "user_id",
            "description": "User id",
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userBodyResponse"
                },
                "examples": {
                  "userBodyResponse": {
                    "value": {
                      "id": "38af88b5-a44e-4e9d-8eaa-41a82d6b19b1",
                      "admin": true,
                      "name": "Maurício",
                      "email": "mauricio.caminha@hotmail.com",
                      "created_at": "2023-01-30T19:18:46.409Z",
                      "updated_at": "2023-01-30T19:18:56.694Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userErrorResponse"
                },
                "examples": {
                  "userErrorResponse": {
                    "value": {
                      "error": "User not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "userBodyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "userBodyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "admin": {
            "type": "boolean",
            "default": "false"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "userErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "listUsersBodyResponse": {
        "type": "array",
        "minItems": 2,
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            },
            "admin": {
              "type": "boolean",
              "default": "false"
            },
            "email": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}